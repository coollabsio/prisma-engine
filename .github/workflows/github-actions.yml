name: build-and-release

on:
  release:
    types: published

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
       -
        name: Checkout
        uses: actions/checkout@v2
       - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
       -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       - 
        name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'version.json'
            prop_path: 'version'
       -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: coollabsio/prisma-engine:${{steps.version.outputs.prop}}-amd64
          cache-from: type=registry,ref=coollabsio/prisma-engine:buildcache-${{steps.version.outputs.prop}}-amd64
          cache-to: type=registry,ref=coollabsio/prisma-engine:buildcache-${{steps.version.outputs.prop}}-amd64,mode=max
       - 
        name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master
        with:
          base-image: coollabsio/prisma-engine:${{steps.version.outputs.prop}}
          extra-images: coollabsio/prisma-engine:${{steps.version.outputs.prop}}-amd64
          push: true
